AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An example SAM template for Lambda Safe Deployments.

Resources:
  generateTemplate:
    Type: AWS::Serverless::Function
    Properties:
      Handler: cloudperception/generateTemplate.handler
      CodeUri: ../build
      Runtime: python3.6
      AutoPublishAlias: live
      Policies:
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "ses:SendRawEmail"
            Resource: '*'
      DeploymentPreference:
          Type: AllAtOnce
          #Hooks:
          #  PreTraffic: !Ref preTrafficHook
      Events:
        Api:
          Type: Api
          Properties:
            Path: /test
            Method: POST
            RestApiId: !Ref MyApi

  lambdaPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref generateTemplate
      Principal: apigateway.amazonaws.com

  preTrafficHook:
    Type: AWS::Serverless::Function
    Properties:
      Handler: preTrafficHook.handler
      Policies:
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "lambda:InvokeFunction"
            Resource: !Ref generateTemplate.Version
      Runtime: python3.6
      DeploymentPreference:
        Enabled: false
      Timeout: 5
      Environment:
        Variables:
          NewVersion: !Ref generateTemplate.Version

  MyApi:
    Type: AWS::Serverless::Api
    Properties:
        StageName: prod
        DefinitionBody:
            swagger: 2.0
            info:
              title:
                Ref: AWS::StackName
            schemes:
            - "https"
            paths:
              /test:
                post:
                  x-amazon-apigateway-integration:
                    httpMethod: POST
                    type: aws_proxy
                    uri:
                        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${generateTemplate.Arn}/invocations
                  responses: {}
                  parameters:
                    - in: body
                      name: body
                      description: Pet object that needs to be added to the store
                      required: true 
                      schema:
                        type: array
                        items:
                          $ref: "#/definitions/CloudPerceptionMarker"

            definitions:
              CloudPerceptionMarker:
                required:
                  - id
                  - x
                  - y
                properties:
                  id:
                    type: integer
                    format: int64
                  x:
                    type: number 
                    format: double 
                  y:
                    type: number 
                    format: double 
